<!doctype html>
<html>
<head>
  <meta http-equiv="Content-Type" content="text/html;charset=UTF-8">
  <title>{{ config.title }}</title>

  <style>
    body {
      display: block;
      align-items: center;
      justify-content: center;
      width: 100%;
      height: 100%;
      background-color: #222222;
      overflow: hidden;
    }
    .image-styled {
      background-position: center;
      background-size: contain;
      background-repeat: no-repeat;
      background-image: url("/random");
      display: block;
      transition: background 0.5s linear;

      position: absolute;
      left: 50%;
      top: 50%;
      transform: translate(-50%, -50%);
      opacity: 1;
      width: 100%;
      height: 100%;
      object-fit: contain;
    }
  </style>
</head>

<body>
  <div id="fadingImage" class="image-styled"></div>

  <script>
  // Overall JS image transition logic via https://daily-dev-tips.com/posts/fading-images-using-javascript/
  // Notably the actual transition logic, e.g. fading, doesn't seem to work, but mechanically updating
  // the image displayed every n seconds, as in a slideshow, does, which is good enough for now.
  let images = [
  {% for i in imgs | reverse %}
    "{{ i }}",
  {% endfor %}
  ];
  
  // Only shuffle if the server-side opt is enabled.
  if ({{ shuffle_opt }}) {
      shuffle(images);
  }

  console.log("images is: ", images);

  const imageEl = document.getElementById("fadingImage");
  console.log("imageEl looks like", imageEl);

  // Duration for each img, in milliseconds
  let duration = {{ duration }} * 1000;
  window.setInterval(changePicture, duration);

  let i = 0;
  changePicture();
  function changePicture() {
    i++;
    if (i > images.length - 1) i = 0;
    let img_url = `url("${images[i]}")`;
    console.log("changing img to: ", img_url);
    imageEl.style.backgroundImage = img_url;
  }

  // Function to randomize order of elements within an array.
  // Takes ownership and modifies array in-place.
  // via https://stackoverflow.com/questions/2450954/how-to-randomize-shuffle-a-javascript-array
  function shuffle(array) {
    let currentIndex = array.length;

    // While there remain elements to shuffle...
    while (currentIndex != 0) {

      // Pick a remaining element...
       let randomIndex = Math.floor(Math.random() * currentIndex);
       currentIndex--;

      // And swap it with the current element.
      [array[currentIndex], array[randomIndex]] = [
        array[randomIndex], array[currentIndex]];
    }
  }

  </script>

</body>
</html>
